plugins {
	id 'org.springframework.boot' version '2.4.3'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id "checkstyle"
	id "com.github.spotbugs" version "4.6.2"
	id "io.freefair.lombok" version "5.3.0"
	id 'jacoco'
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'checkstyle'
apply plugin: "com.github.spotbugs"

group = 'uk.nhs.adaptors'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2020.0.1")
}

lombok {
	config['lombok.log.fieldName'] = 'LOGGER'
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.cloud:spring-cloud-starter-gateway'

	implementation 'org.apache.commons:commons-lang3:3.11'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.junit.jupiter:junit-jupiter-params:5.7.0'
	testImplementation 'com.github.tomakehurst:wiremock:2.27.2'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

test {
	useJUnitPlatform()
}

jacocoTestReport {
	dependsOn test // tests are required to run before generating the report
}

sourceSets {
	integrationTest {
		java {
			compileClasspath += main.output + test.output
			runtimeClasspath += main.output + test.output
			srcDir file('src/intTest/java')
		}

		resources {
			srcDir file('src/intTest/resources')
		}
	}
}

configurations {
	integrationTestCompileOnly.extendsFrom testCompileOnly
	integrationTestImplementation.extendsFrom testImplementation
	integrationTestRuntime.extendsFrom testRuntime
	integrationTestAnnotationProcessor.extendsFrom testAnnotationProcessor
}

task integrationTest(type: Test) {
	useJUnitPlatform() {
		description = 'Runs integration tests.'
		group = 'verification'

		testClassesDirs = sourceSets.integrationTest.output.classesDirs
		classpath = sourceSets.integrationTest.runtimeClasspath
		shouldRunAfter test
	}
}

tasks.withType(Test) {
	testLogging {
		events "passed", "skipped", "failed"
	}
}

check.dependsOn integrationTest
jacocoTestReport.dependsOn integrationTest

spotbugsTest.enabled = false
spotbugsIntegrationTest.enabled = false
spotbugsMain {
	reports {
		html {
			enabled = true
		}
		xml {
			enabled = true
		}
	}
}