plugins {
	id "org.springframework.boot" version "3.2.5"
	id "io.spring.dependency-management" version "1.1.4"
	id "java"
	id "checkstyle"
	id "com.github.spotbugs" version "6.0.13"
	id "io.freefair.lombok" version "8.6"
	id "jacoco"
}

apply plugin: "java"
apply plugin: "org.springframework.boot"
apply plugin: "io.spring.dependency-management"
apply plugin: "checkstyle"
apply plugin: "com.github.spotbugs"

group = "uk.nhs.adaptors"
sourceCompatibility = "17"

repositories {
	mavenCentral()
}

ext {
	set("springCloudVersion", "2023.0.0")
}

dependencies {
	implementation "org.springframework.boot:spring-boot-starter-actuator"
	implementation "org.springframework.cloud:spring-cloud-starter-gateway"

	implementation "ca.uhn.hapi.fhir:hapi-fhir-structures-dstu3:5.4.0"

	implementation "com.heroku.sdk:env-keystore:1.1.8"

	implementation ("org.apache.commons:commons-lang3:3.14.0")

	// Test
	testImplementation "org.springframework.boot:spring-boot-starter-test"
	testImplementation "com.jayway.jsonpath:json-path:2.9.0"
	testImplementation "org.junit.jupiter:junit-jupiter-params:5.7.0"
	testImplementation "com.github.tomakehurst:wiremock-standalone:3.0.1"
	testImplementation "uk.org.webcompere:system-stubs-jupiter:1.2.0"
	testImplementation "org.assertj:assertj-core:3.25.3"
	testImplementation "org.testcontainers:testcontainers:1.19.7"
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

test {
	useJUnitPlatform()
}

jacocoTestReport {
	dependsOn test // tests are required to run before generating the report
}

sourceSets {
	integrationTest {
		java {
			compileClasspath += main.output + test.output
			runtimeClasspath += main.output + test.output
			srcDir file("src/intTest/java")
		}

		resources {
			srcDir file("src/intTest/resources")
		}
	}
}

configurations {
	integrationTestCompileOnly.extendsFrom testCompileOnly
	integrationTestImplementation.extendsFrom testImplementation
	integrationTestRuntime.extendsFrom testRuntime
	integrationTestAnnotationProcessor.extendsFrom testAnnotationProcessor
}

task integrationTest(type: Test) {
	useJUnitPlatform() {
		description = "Runs integration tests."
		group = "verification"

		testClassesDirs = sourceSets.integrationTest.output.classesDirs
		classpath = sourceSets.integrationTest.runtimeClasspath
		shouldRunAfter test
	}
}

tasks.withType(Test) {
	testLogging {
		events "passed", "skipped", "failed"
	}
}

check.dependsOn integrationTest
jacocoTestReport.dependsOn integrationTest

spotbugsTest.enabled = false
spotbugsIntegrationTest.enabled = false
spotbugsMain {
	reports {
		html {
			enabled = true
		}
		xml {
			enabled = true
		}
	}
}