plugins {
	id "org.springframework.boot" version "3.5.6"
	id "io.spring.dependency-management" version "1.1.7"
	id "java"
	id "checkstyle"
	id "com.github.spotbugs" version "6.4.1"
	id "io.freefair.lombok" version "8.14.2"
	id "jacoco"
}

spotbugs {
    toolVersion = '4.9.5'
}

apply plugin: "java"
apply plugin: "org.springframework.boot"
apply plugin: "io.spring.dependency-management"
apply plugin: "checkstyle"
apply plugin: "com.github.spotbugs"

group = "uk.nhs.adaptors"

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}
repositories {
	mavenCentral()
}

ext {
	set("springCloudVersion", "2025.0.0")
}

dependencies {
	implementation "org.springframework.boot:spring-boot-starter-actuator"
	implementation "org.springframework.cloud:spring-cloud-starter-gateway"
	implementation "ca.uhn.hapi.fhir:hapi-fhir-structures-dstu3:8.4.0"
	implementation "com.heroku.sdk:env-keystore:1.1.12"

	implementation "org.apache.commons:commons-lang3:3.18.0"
	implementation 'org.jetbrains:annotations:26.0.2'
	implementation ("org.apache.commons:commons-lang3:3.18.0")
	implementation 'org.jetbrains:annotations:26.0.2-1'

  spotbugs 'com.github.spotbugs:spotbugs:4.9.5'
  spotbugs 'com.github.spotbugs:spotbugs-annotations:4.9.5'

	// Test
	testImplementation "org.springframework.boot:spring-boot-starter-test"
	testImplementation "com.jayway.jsonpath:json-path:2.9.0"
	testImplementation "com.github.tomakehurst:wiremock-standalone:3.0.1"
	testImplementation "org.assertj:assertj-core:3.27.4"
	testImplementation "org.testcontainers:testcontainers:1.21.3"
    testImplementation "org.apache.commons:commons-compress:1.28.0"
    testImplementation "org.springframework.cloud:spring-cloud-gateway-server:4.3.1"
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

test {
	useJUnitPlatform()
}

jacocoTestReport {
	reports {
		xml.required = true
	}
	dependsOn test // tests are required to run before generating the report
}

sourceSets {
	integrationTest {
		java {
			compileClasspath += main.output + test.output
			runtimeClasspath += main.output + test.output
			srcDir file("src/intTest/java")
		}

		resources {
			srcDir file("src/intTest/resources")
		}
	}
}

configurations {
	integrationTestCompileOnly.extendsFrom testCompileOnly
	integrationTestImplementation.extendsFrom testImplementation
	integrationTestRuntime.extendsFrom testRuntime
	integrationTestAnnotationProcessor.extendsFrom testAnnotationProcessor
}

tasks.register('integrationTest', Test) {
    useJUnitPlatform() {
        description = "Runs integration tests."
        group = "verification"

        testClassesDirs = sourceSets.integrationTest.output.classesDirs
        classpath = sourceSets.integrationTest.runtimeClasspath
    }
    shouldRunAfter test
}

tasks.withType(Test).configureEach {
    testLogging {
        events "passed", "skipped", "failed"
    }
}

check.dependsOn integrationTest

spotbugsTest.enabled = false
spotbugsIntegrationTest.enabled = false
spotbugsMain {
	reports {
		html {
            enabled(true)
        }
        xml {
            enabled(true)
        }
    }
}